<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Selier</title>
  
  <subtitle>分享美的价值</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://theliang.coding.me/blog/"/>
  <updated>2018-09-01T08:29:40.328Z</updated>
  <id>http://theliang.coding.me/blog/</id>
  
  <author>
    <name>Selier</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo使用细节及各种问题</title>
    <link href="http://theliang.coding.me/blog/2018/09/01/Hexo%E4%BD%BF%E7%94%A8%E7%BB%86%E8%8A%82%E5%8F%8A%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://theliang.coding.me/blog/2018/09/01/Hexo使用细节及各种问题/</id>
    <published>2018-09-01T08:28:51.000Z</published>
    <updated>2018-09-01T08:29:40.328Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><blockquote><p>解决markdown图片不显示(返回403 forbidden)、添加本地图片无法显示、修改文章page模板、同时发布同步到多个仓库站点(Github coding)</p></blockquote><a id="more"></a><h2 id="图片不显示"><a href="#图片不显示" class="headerlink" title="图片不显示"></a>图片不显示</h2><p>在使用过程中，会发现有的引用图片无法显示的问题。但是如果直接复制图片地址到浏览器打开的话显示正常</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901143609335-461771771.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>403 forbidden，说明了这个网络资源这样获取是被拒绝的，那么通过简单的百度，找到了相关的解决方法，并去实际尝试：</p><p><strong>解决方法</strong> ：只需要在头部添加一个meta   <code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</code></p><p>当然在Hexo中呢，应该在你的 md文件中添加meta，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: test</span><br><span class="line">date: 2018-09-01 14:38:14</span><br><span class="line">tags: test,测试</span><br><span class="line">description: 测试</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;meta name="referrer" content="no-referrer" /&gt;</span><br><span class="line"></span><br><span class="line"><span class="section"># 这是一篇测试文章</span></span><br><span class="line"><span class="section">## 内容</span></span><br></pre></td></tr></table></figure><p>这样只要你在每篇文章中添加这行meta就可以解决图片不显示的问题啦！</p><h2 id="修改文章模板"><a href="#修改文章模板" class="headerlink" title="修改文章模板"></a>修改文章模板</h2><p>每当你使用命令 <code>hexo new &#39;文章名称&#39;</code> 新建一篇文章时，你可能需要在里面书写 <code>&lt;!--more--&gt;</code> ，或者还要写 meta，这样你会觉得很麻烦。所以这里我说下修改模板的方法，解决你每次都要写重复的内容</p><ul><li>打开你的博客目录下的 <code>scaffolds</code> - <code>post.md</code> 文件</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901144511147-1883435396.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>它默认是这样的：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>你可以将每次重复书写的内容放在里面，这样每次新建的时候都要按这个模板生成。我的模板如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">description: </span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;meta name="referrer" content="no-referrer" /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h2 id="同时发布到多个仓库"><a href="#同时发布到多个仓库" class="headerlink" title="同时发布到多个仓库"></a>同时发布到多个仓库</h2><p>Github毕竟是国外的网站，在国内访问会受到不少限制，这时候你可以选择 &lt;coding.net&gt; 来发布自己的博客。但是又想两个都发布，最好还是写一篇能同时发布到这两个站点</p><p>这个是当然没有问题的！但是一个站点只可以部署一个网站，因为它会校验SSH key的唯一性，不可以重复。下面看下具体步骤</p><p>1、首先你需要注册一个 <a href="https://coding.net" target="_blank" rel="noopener">coding</a> ，新建一个项目</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901145636752-536175344.png" alt="新建项目" title="">                </div>                <div class="image-caption">新建项目</div>            </figure><p>要求项目名称： <code>你的用户名.coding.me</code> （这里域名是coding.me，不是coding.net）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901150405773-793834396.png" alt="配置项目" title="">                </div>                <div class="image-caption">配置项目</div>            </figure><p>新建完项目后，点项目的 <code>代码</code> - <code>Pages服务</code> - <code>一键开启静态Pages</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901154841420-554035428.png" alt="开启静态Pages" title="">                </div>                <div class="image-caption">开启静态Pages</div>            </figure><p>开启成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901155053936-2107072939.png" alt="开启成功" title="">                </div>                <div class="image-caption">开启成功</div>            </figure><p>2、打开 <code>个人设置</code> - <code>SSH公钥</code> - <code>新增公钥</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901150703058-108745341.png" alt="设置SSH" title="">                </div>                <div class="image-caption">设置SSH</div>            </figure><p>3、将上次部署Hexo时生成的Hexo密钥拷贝到这里，路径为  <code>你的用户目录/.ssh/id_rsa.pub</code> 。如果没有这个文件的话，可以根据我发布的 hexo+github搭建教程 中 配置SSH key</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901151212881-1366603102.png" alt="SSH文件位置" title="">                </div>                <div class="image-caption">SSH文件位置</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901151042298-1743809668.png" alt="添加SSH key" title="">                </div>                <div class="image-caption">添加SSH key</div>            </figure><blockquote><p>这个 SSH key 一定要在github、coding中一致，所以会共用 <code>id_rsa.pub</code> 中的key。</p></blockquote><p>4、添加完成后，我们测试下连接</p><p>打开 <code>git-cmd</code> / <code>git-bash</code> / <code>cmd</code> ，运行命令： <code>ssh -T git@git.coding.net</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901153130743-436751981.png" alt="连接成功" title="">                </div>                <div class="image-caption">连接成功</div>            </figure><p>5、配置 <code>_config.yml</code></p><p>打开 博客目录下的 <code>_config.yml</code> ，修改 <code>deploy</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span></span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:你的用户名/你的用户名.github.io.git,master</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.coding.net:你的用户名/你的用户名.coding.me.git,master</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901154121452-1849897849.png" alt="配置" title="">                </div>                <div class="image-caption">配置</div>            </figure><p>6、发布</p><p>运行 <code>git-cmd&#39; ，转到博客目录，生成并上传仓库</code>hexo d -g`</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901155338823-823730358.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>现在你的博客网站就可以访问啦！</p>]]></content>
    
    <summary type="html">
    
      解决markdown图片不显示(返回403 forbidden)、添加本地图片无法显示、修改文章page模板、同时发布同步到多个仓库站点(Github coding)
    
    </summary>
    
    
      <category term="hexo,Github" scheme="http://theliang.coding.me/blog/tags/hexo-Github/"/>
    
  </entry>
  
  <entry>
    <title>微擎安装使用及插件模块安装</title>
    <link href="http://theliang.coding.me/blog/2018/09/01/%E5%BE%AE%E6%93%8E%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%8F%92%E4%BB%B6%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85/"/>
    <id>http://theliang.coding.me/blog/2018/09/01/微擎安装使用及插件模块安装/</id>
    <published>2018-09-01T05:09:42.000Z</published>
    <updated>2018-09-01T06:29:56.972Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>讲解微擎安装使用及插件模块的安装，解决下载插件模块后不知道怎么使用的情况。以及安装失败，忘记密码的解决方法</p><a id="more"></a><h2 id="安装微擎"><a href="#安装微擎" class="headerlink" title="安装微擎"></a>安装微擎</h2><blockquote><p>在安装微擎时，建议不要使用官网的(0.5 - 1.0)版本，个人在安装过程会出现错误，如下：</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825082245629-2016727363.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>建议使用 商业版本，下载地址我这里有提供：</p><p><a href="https://download.csdn.net/download/the_liang/10635914" target="_blank" rel="noopener">微擎 1.7.9 版本</a></p><p><a href="https://download.csdn.net/download/the_liang/10620146" target="_blank" rel="noopener">微擎 1.7.7 版本</a></p><p><a href="https://download.csdn.net/download/the_liang/10625802" target="_blank" rel="noopener">微擎 1.7.5 版本</a> (如果你使用IIS运行PHP，建议用此版本)</p><blockquote><p>上面的版本都可以使用，只是在不同环境下可能会出现问题，如果出现问题就换一个版本</p></blockquote><h3 id="1-安装PHP及Web、数据库环境"><a href="#1-安装PHP及Web、数据库环境" class="headerlink" title="1. 安装PHP及Web、数据库环境"></a>1. 安装PHP及Web、数据库环境</h3><p>首先需要准备PHP环境，我这里用的是集成环境(WampServer)，当然你也可以使用其它的环境，但是本教程不会讲述如何安装环境</p><h3 id="2-解压拷贝微擎"><a href="#2-解压拷贝微擎" class="headerlink" title="2. 解压拷贝微擎"></a>2. 解压拷贝微擎</h3><p>将下载好的微擎解压，拷贝到Web容器的站点目录(www目录，有的环境是wwwroot)下，也就是wamp安装目录下的www</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825083214134-1152638008.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果有重复就直接替换</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825083359609-2072526639.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="3-运行"><a href="#3-运行" class="headerlink" title="3. 运行"></a>3. 运行</h3><p>WampServer直接左击右下角的小图标，选择 <code>重启所有服务</code> ，并选择 <code>切换到在线状态</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825083721816-1275471659.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="4-访问"><a href="#4-访问" class="headerlink" title="4. 访问"></a>4. 访问</h3><p>完成后，我们可以打开浏览器访问链接了： <a href="http://localhost:80" target="_blank" rel="noopener">http://localhost:80</a> (注意这里的端口，是在Web容器中配置的，我这里配置的是808，不影响教程)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825084258830-813195805.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>需要注意的是：如果你打开的页面是空白的，那需要注意下mysql中是否包含有 <code>we7</code> 或者 <code>weengine</code> 数据库，如果有需要将它们删除，然后再重复 <code>第二步</code></p></blockquote><h3 id="5-安装微擎"><a href="#5-安装微擎" class="headerlink" title="5. 安装微擎"></a>5. 安装微擎</h3><p>5.1. 点击链接，进入安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825084636282-1409992935.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>此时会出现两个问题：<code>您的PHP环境不支持cURL, 也不支持 allow_url_fopen</code> <code>没有启用OpenSSL</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825084815370-995381052.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解决：修改php.ini配置（WampServer需要在 <code>C:\wamp\bin\apache\apache2.2.22\bin\php.ini</code> 修改，类似的如果你用的是其它的集成环境，请注意下Web容器中是否有php.ini）</p><p>分别搜索 <code>curl</code> <code>openssl</code> ，将它们前面的分号去掉</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825085257209-1523464150.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825085240868-1875017244.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>5.2. 然后重新启动服务器， 再次打开，此时就没有错误提示了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825085428989-2109499368.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>5.3. 点击继续，开始配置数据库和管理员账号。然后点继续</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825085941897-950835935.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825090000286-885069434.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>注意：如果这里点安装无响应，或者访问错误，请切换微擎版本</p></blockquote><p>5.4. 安装成功后可以进入首页啦</p><p>输入刚刚配置的管理员账号密码，登录成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825091329760-1470097412.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825091359565-276580137.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>如果忘记了账号密码，需要到数据库表中修改，或者删除数据库重新安装微擎，当然还有一个更好的办法，下载 <a href="https://download.csdn.net/download/the_liang/10625844" target="_blank" rel="noopener">附件</a> </p></blockquote><p><img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825091231639-1037925641.png" alt=""></p><h2 id="安装插件模块"><a href="#安装插件模块" class="headerlink" title="安装插件模块"></a>安装插件模块</h2><h3 id="1-下载模块并解压"><a href="#1-下载模块并解压" class="headerlink" title="1. 下载模块并解压"></a>1. 下载模块并解压</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825091715104-1148843727.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>注意：我这个是带有前后端的小程序应用，你下载前要注意看看你下载的模块是否需要前后端</p></blockquote><h3 id="2-将模块拷贝到微擎的addons目录"><a href="#2-将模块拷贝到微擎的addons目录" class="headerlink" title="2. 将模块拷贝到微擎的addons目录"></a>2. 将模块拷贝到微擎的addons目录</h3><p>没有addons可以自己创建。如果是包含前后端的只需要将后端文件拷贝过去</p><blockquote><p>注意看截图的目录结构</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092044961-673945896.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="3-安装模块"><a href="#3-安装模块" class="headerlink" title="3. 安装模块"></a>3. 安装模块</h3><p>3.1 重启服务，打开网址，登录系统。会发现出现了一个未安装应用。</p><blockquote><p>没有看到也没有关系，可能是因为系统还没有完全加载好。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092246011-1850395181.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3.2 点击未安装的应用，选择 <code>安装应用模块</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092552026-1736012326.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092616947-1704069866.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3.3 勾选 <code>体验套餐服务</code> 然后点 <code>确定安装</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092654456-1710375720.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>安装成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092732190-578569095.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3.4 安装完成后，可以在 <code>系统</code> - <code>小程序应用</code> - <code>已安装应用</code> 中看到。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180825092836896-385616020.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>注意：如果安装失败，请确定你的微擎是否有安装异常，以及你模块应用缺少文件</p></blockquote>]]></content>
    
    <summary type="html">
    
      讲解微擎安装使用及插件模块的安装，解决下载插件模块后不知道怎么使用的情况。以及安装失败，忘记密码的解决方法
    
    </summary>
    
    
      <category term="PHP,微擎" scheme="http://theliang.coding.me/blog/tags/PHP-%E5%BE%AE%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo+github搭建免费个人博客详细教程</title>
    <link href="http://theliang.coding.me/blog/2018/09/01/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>http://theliang.coding.me/blog/2018/09/01/使用hexo-github搭建免费个人博客详细教程/</id>
    <published>2018-09-01T00:35:08.000Z</published>
    <updated>2018-09-01T06:29:36.468Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><blockquote><p>Windows环境下Git安装、配置SSH key、安装node.js npm、安装Hexo及配置、发布博客</p></blockquote><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；<br>等等；</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始一切之前，你必须已经：</p><ul><li>有一个github账号，没有的话去注册一个：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></li><li>安装了git for windows（或者其它git客户端）：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></li><li>安装了node.js、npm，并了解相关基础知识：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li></ul><blockquote><p>本文所使用的环境：</p></blockquote><p>Windows 10<br><a href="mailto:node.js@8.11.4" target="_blank" rel="noopener">node.js@8.11.4</a> x64<br><a href="mailto:git@2.18.0" target="_blank" rel="noopener">git@2.18.0</a> x64<br><a href="mailto:hexo@3.2.2" target="_blank" rel="noopener">hexo@3.2.2</a></p><h2 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>新建一个名为 <code>你的用户名.github.io</code> 的仓库，比如说，如果你的github用户名是 <code>test</code> ，那么你就新建 <code>test.github.io</code> 的仓库（ <strong>必须是你的用户名</strong> ，其它名称无效），将来你的网站访问地址就是 <code>http://test.github.io</code> 了，是不是很方便？</p><p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>几个注意的地方：</p><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：<code>username.github.io</code> ，其中username是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久;</li></ol><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><p><strong>具体步骤截图如下：</strong></p><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831203039764-1977719250.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831203054138-1575956832.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831203325128-839066444.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>创建完成</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831203357013-1844841811.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>过了一会后就可以访问自己的网站啦！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831204919979-1323283699.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p>打开Git <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载地址</a> ，我们点 windows</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831205329048-1071025267.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831205505133-976328913.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>这里我推荐使用便携版，因为很多人不喜欢安装软件，何况又是一个不太经常使用的软件，所以便携版安装卸载都很方便<br>如果下载的是安装版，那么你直接按默认值一直点下一步就可以了。如果实在不会安装可以去网上找教程。</p></blockquote><p>便携版下载完只需要解压，再配置环境变量</p><p>下载完后解压的文件如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831205912843-1688970370.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开系统的环境变量，编辑Path环境变，新建路径： <code>git的存放目录</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831212436273-2012766987.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>至此，git算是安装完成啦，我们可以打开控制台测试一下</p><p> <code>win</code> + <code>r</code> 输入 <code>cmd</code>  ，然后 输入 <code>git --version</code> </p><p><img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831210803891-997871094.png" alt=""></p><h4 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h4><blockquote><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p></blockquote><p>1、运行命令： <code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code> 。邮件地址可以登录你的github - <code>Setting</code> - <code>Emails</code> 查看</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831230651502-494371235.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2、然后连续3次回车，最终会生成一个文件在用户目录下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831231018901-380467408.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3、打开用户目录，找到 <code>.ssh\id_rsa.pub</code> 文件，记事本打开并复制里面的内容</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831231153499-1930129639.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>4、打开你的github主页，进入 <code>个人设置</code> - <code>SSH and GPG keys</code> - <code>New SSH key</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831231720434-1195575481.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>将刚复制的内容粘贴到key那里，title随便填，保存。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831231935345-1778926.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>5、测试连接</p><p>运行命令： <code>ssh -T git@github.com</code> 。<strong>注意这条命令不用修改，直接运行</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831232446646-1977369661.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>6、全局配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;selier&quot;    // 你的github用户名，非昵称</span><br><span class="line">git config --global user.email  &quot;邮箱@qq.com&quot;    // 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831232630540-1792029555.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>至此，你的Git就配置好了</p></blockquote><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><p>下载安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodeJs</a> ，随便选一个即可，下载后安装时一路默认next (安装路径可以自选)。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831212813443-915937242.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>安装完成后，测试是否安装成功</p><p>在 控制台中 输入 <code>node -v</code> ，<code>npm -v</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831213011673-721153980.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>此处说明下：新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西</p><h3 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h3><h4 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h4><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><h4 id="2、原理"><a href="#2、原理" class="headerlink" title="2、原理"></a>2、原理</h4><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h4 id="3、注意事项"><a href="#3、注意事项" class="headerlink" title="3、注意事项"></a>3、注意事项</h4><p>安装之前先来说几个注意事项：</p><ol><li>很多命令既可以用Windows的 <code>cmd</code> 来完成，也可以使用 <code>git bash</code> / <code>git cmd</code>来完成，但是这里因为我用的是便携版 git ，所以我用的是git目录下的 <code>git-cmd</code></li><li>git安装版会集成鼠标右键菜单 <code>git-bash</code> ，所以下面很多步骤中需要通过git跳转到某个目录的，你可以直接打开这个目录，在空白处右键 - <code>git-bash</code></li><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种 <code>_config.yml</code> 文件，一个是根目录下的全局的 <code>_config.yml</code> ，一个是各个 <code>theme</code> 下的；</li></ol><h4 id="4、安装"><a href="#4、安装" class="headerlink" title="4、安装"></a>4、安装</h4><p>1、打开 <code>git-cmd</code> ，输入 <code>npm install hexo-cli  -g</code> 进行安装。如果显示报错“ <strong>没有这个指令</strong> ”，请点击 <a href="https://www.jianshu.com/p/03a76b2e7e00" target="_blank" rel="noopener">这个网站</a> 看第五点，配置nodeJs全局环境。</p><blockquote><p>可能你的网络无法访问网站并安装，那么你可以通过 <a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝NPM镜像</a> 来安装： <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code> ，之后下面的所有用到 <code>npm</code> 的命令，可以使用 <code>cnpm</code> 代替 ，如 <code>npm install hexo-cli  -g</code> 改成 <code>cnpm install hexo-cli  -g</code></p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831220956547-994440155.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2、 再输入 <code>npm install hexo --save</code> ，等待安装完成。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831222742602-605970209.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3、初始化</p><p>3.1、在电脑的某个地方新建一个文件夹（名字可以随便取），比如我的是 <code>D:\我的文档\selierlin.github.io</code> ，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><p>3.2、打开 <code>git-cmd</code> ，跳转到刚刚创建的文件夹位置，运行命令 <code>hexo init</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831223350446-1421328244.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后会在你的文件夹中搭建好了环境</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831223429090-2067706702.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="5、配置-config-yml"><a href="#5、配置-config-yml" class="headerlink" title="5、配置 __config.yml"></a>5、配置 <code>__config.yml</code></h4><p>1、修改一些你的博客名字、描述、作者等。同时大家可以修改自己的主题，更多主题 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">点击这里</a> 。修改主题就修改 <code>_config.yml</code> 里面的 <code>theme</code> 。<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">更多关于其他配置信息修改请点击这里访问hexo官方文档</a> 。</p><blockquote><p>在 <code>_config.yml</code> 文档修改所有信息都要注意， <strong>冒号后面一定要有一个空格</strong></p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831223855028-1789670474.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831224222887-339834680.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2、hexo与github关联配置</p><ul><li>type改成git</li><li>repo的格式就是：<a href="mailto:`git@github.com" target="_blank" rel="noopener">`git@github.com</a>:你的用户名/你的用户名.github.io.git`</li><li>branch为master</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831224432102-1395042097.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="6、启动本地服务"><a href="#6、启动本地服务" class="headerlink" title="6、启动本地服务"></a>6、启动本地服务</h4><p>1、使用 <code>git-cmd</code> 跳转到你的博客目录，依次输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g  # 生成</span><br><span class="line">hexo s  # 启动服务</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831225245111-1714988765.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2、然后可以通过浏览器访问：<a href="http://127.0.0.1:4000" target="_blank" rel="noopener">http://127.0.0.1:4000</a> 你就看到你的博客样子啦。停止你的本地服务器，你可以在Git命令页面按住 <code>Ctrl+C</code> 来停止。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831225406233-959832966.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>如果浏览器一直转圈圈，加载不出来，一般情况下是因为端口占用的缘故，<a href="https://www.cnblogs.com/selier/p/9514426.html" target="_blank" rel="noopener">解决方法</a></p></blockquote><h4 id="7、上传到Github"><a href="#7、上传到Github" class="headerlink" title="7、上传到Github"></a>7、上传到Github</h4><blockquote><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p></blockquote><p>1、确认你的 <code>_config.yml</code> 文件已经配置了Deployment</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831224432102-1395042097.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>2、<code>git-cmd</code> 跳转到博客目录，安装Hexo部署的插件 ： <code>npm install hexo-deployer-git --save</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831234610838-1646291817.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3、使用 <code>git-bash</code> 跳转到博客目录 ，运行命令 <code>hexo d</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831234827833-1796945647.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同时，在你的github上已经上传了文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831235011550-1278504002.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>如果出现 <code>Deployer not found: git</code> 说明Hexo部署的插件没有安装好</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831234040111-1025719987.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>4、发布完成，现在可以通过 <code>你的用户名.github.io</code> 访问自己的网站啦</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201808/1469487-20180831235111979-1800812797.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><h4 id="1、保留CNAME、README-md等文件"><a href="#1、保留CNAME、README-md等文件" class="headerlink" title="1、保留CNAME、README.md等文件"></a>1、保留CNAME、README.md等文件</h4><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901000346239-942992669.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p></blockquote><h4 id="2、常用hexo命令"><a href="#2、常用hexo命令" class="headerlink" title="2、常用hexo命令"></a>2、常用hexo命令</h4><p>常见命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h4 id="3、-config-yml"><a href="#3、-config-yml" class="headerlink" title="3、_config.yml"></a>3、_config.yml</h4><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">更多关于其他配置信息修改请点击这里访问hexo官方文档</a> </p><p>需要特别注意的地方是，冒号后面必须有 <strong>一个空格</strong> ，否则可能会出问题。</p><h4 id="4、写博客"><a href="#4、写博客" class="headerlink" title="4、写博客"></a>4、写博客</h4><p>写博客并上传的过程如下：</p><ul><li>在hexo根目录使用 <code>hexo new &#39;标题&#39;</code> 创建文章</li><li>编写文章后，使用 <code>hexo g</code> 生成静态文件到public</li><li>使用 <code>hexo d</code> 发布到github</li></ul><blockquote><p>也可以使用组合命令 <code>hexo d -g</code> 生成并上传</p></blockquote><hr><p>定位到我们的hexo根目录，执行命令： <code>hexo new &#39;my-first-blog&#39;</code></p><p>hexo会帮我们在_posts下生成相关md文件<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901001520549-1245234083.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901001451028-1607010567.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>一般完整格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure><p>那么 <code>hexo new page &#39;postName&#39;</code> 命令和 <code>hexo new &#39;postName&#39;</code> 有什么区别呢？</p><p><code>hexo new page &quot;my-second-blog&quot;</code> 生成如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901001652539-250117459.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最终部署时生成：<code>博客目录\public\my-second-blog\index.html</code> ，但是它不会作为文章出现在博文目录。</p><h4 id="5、修改主题"><a href="#5、修改主题" class="headerlink" title="5、修改主题"></a>5、修改主题</h4><p>既然默认主题很丑，那我们首先来替换一个好看点的主题。这是 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a></p><p>这里我推荐几款不错的主题：</p><table><thead><tr><th style="text-align:left">仓库地址</th><th style="text-align:left">演示地址</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NexT</a></td><td style="text-align:left"><a href="https://notes.iissnan.com/" target="_blank" rel="noopener">https://notes.iissnan.com/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT6.0</a></td><td style="text-align:left"><a href="https://theme-next.org/" target="_blank" rel="noopener">https://theme-next.org/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia</a></td><td style="text-align:left"><a href="http://litten.me/" target="_blank" rel="noopener">http://litten.me/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="noopener">yelee</a></td><td style="text-align:left"><a href="http://moxfive.xyz/" target="_blank" rel="noopener">http://moxfive.xyz/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener">material</a></td><td style="text-align:left"><a href="https://blog.nfz.moe/" target="_blank" rel="noopener">https://blog.nfz.moe/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">indigo</a></td><td style="text-align:left"><a href="https://imys.net/" target="_blank" rel="noopener">https://imys.net/</a></td></tr><tr><td style="text-align:left"><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">maupassant</a></td><td style="text-align:left"><a href="https://www.haomwei.com" target="_blank" rel="noopener">https://www.haomwei.com</a></td></tr></tbody></table><p>安装步骤：</p><ul><li>打开 <code>git-cmd</code> ，跳转到你的博客目录</li><li>使用 git 拉取主题 <code>git clone 仓库主题地址.git themes/主题名称</code> ，意思是下载主题并将其保存到themes目录下</li></ul><p>如：<code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901101234460-1255176256.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li>修改 主目录下 <code>_config.yml</code> 中的 <code>theme: landscape</code> 改为 <code>theme: next</code> ，然后重新执行 <code>hexo g</code> 来重新生成。</li></ul><blockquote><p>如果出现一些莫名其妙的问题，可以先执行 <code>hexo clean</code> 来清理一下public的内容，然后再来重新生成和发布 <code>hexo d -g</code></p></blockquote><ul><li>安装完主题后，建议开启标签页、分类页</li></ul><blockquote><p>由于某些主题需要用到标签、分类，但是它的安装方法中又没有描述清楚。基于我的个人经验，建议都开启</p></blockquote><p>1、开启标签页命令 ：<code>hexo new page tags</code>  ，在 <code>博客目录/source/tags/index.md</code> 添加元数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>2、开启分类页命令 ：<code>hexo new page categories</code>  ，在 <code>博客目录/source/categories/index.md</code> 添加元数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><h4 id="6、如何让博文列表不显示全部内容"><a href="#6、如何让博文列表不显示全部内容" class="headerlink" title="6、如何让博文列表不显示全部内容"></a>6、如何让博文列表不显示全部内容</h4><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上 <code>&lt;!--more--&gt;</code> 即可，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 前言</span></span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>全是静态文件，访问速度快；</span><br><span class="line"><span class="bullet">2. </span>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line"><span class="bullet">3. </span>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line"><span class="bullet">5. </span>博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line"><span class="bullet">6. </span>等等；</span><br></pre></td></tr></table></figure><p>最终效果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://images2018.cnblogs.com/blog/1469487/201809/1469487-20180901001817554-1020312230.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      Windows环境下Git安装、配置SSH key、安装node.js npm、安装Hexo及配置、发布博客
    
    </summary>
    
      <category term="Github" scheme="http://theliang.coding.me/blog/categories/Github/"/>
    
    
      <category term="Git" scheme="http://theliang.coding.me/blog/tags/Git/"/>
    
      <category term="Markdown" scheme="http://theliang.coding.me/blog/tags/Markdown/"/>
    
      <category term="Hexo" scheme="http://theliang.coding.me/blog/tags/Hexo/"/>
    
  </entry>
  
</feed>
